good = {
    "array_nest_split_05.smt2": {"time": "0:00:00.038022"},
    "array2dim_copy.smt2": {"time": "0:00:00.047423"},
    "array_init_increm_twice.smt2": {"time": "0:00:16.857512"},
    "array_hybr_nest_2.smt2": {"time": "0:00:00.046827"},
    "array2dim_init_j.smt2": {"time": "0:00:00.057145"},
    "array_init_nondet_vars_plus_ind.smt2": {"time": "0:00:11.671129"},
    "array_max_min.smt2": {"time": "0:00:00.084207"},
    "array_min_and_copy.smt2": {"time": "0:00:03.578143"},
    "array2dim_rec2.smt2": {"time": "0:00:00.052121"},
    "array_nest_split_01.smt2": {"time": "0:00:00.035502"},
    "array_hybr_add.smt2": {"time": "0:00:09.906777"},
    "array_init_and_copy_const.smt2": {"time": "0:00:02.047913"},
    "array2dim_init.smt2": {"time": "0:00:00.046351"},
    "array_init_pair_symmetr.smt2": {"time": "0:00:04.309207"},
    "array2dim_init_i.smt2": {"time": "0:00:00.055380"},
    "array_horn_copy2.smt2": {"time": "0:00:00.816990"},
    "array_copy_nondet_add.smt2": {"time": "0:01:19.693039"},
    "array_bubble_sort_rev.smt2": {"time": "0:00:00.013704"},
    "array_init_increm_two_arrs_antisym.smt2": {"time": "0:01:00.233140"},
    "array_init_addvar7.smt2": {"time": "0:00:00.284453"},
    "array_max_reverse_min.smt2": {"time": "0:00:51.828662"},
    "array_hybr_nest_3.smt2": {"time": "0:00:00.048480"},
    "array_init_pair_symmetr3.smt2": {"time": "0:00:48.679862"},
    "array_init_and_copy.smt2": {"time": "0:00:08.225056"},
    "array_init_addvar3.smt2": {"time": "0:00:19.373809"},
    "array_nest_split_04.smt2": {"time": "0:00:00.038263"},
    "array_hybr_nest_1.smt2": {"time": "0:00:00.046454"},
    "array_hybr_nest_5.smt2": {"time": "0:00:00.047340"},
    "array_hybr_nest_4.smt2": {"time": "0:00:00.047807"},
    "array_bubble_sort.smt2": {"time": "0:00:00.013269"},
    "array_nest_split_03.smt2": {"time": "0:00:00.036312"},
    "array_nest_split_02.smt2": {"time": "0:00:00.034701"},
    "array2dim_rec1.smt2": {"time": "0:00:00.047749"},
}
proph = {
    "array_init_increm_twice.smt2": {"time": "0:00:16.857512"},
    "array_init_nondet_vars_plus_ind.smt2": {"time": "0:00:11.671129"},
    "array_min_and_copy.smt2": {"time": "0:00:03.578143"},
    "array_hybr_add.smt2": {"time": "0:00:09.906777"},
    "array_init_and_copy_const.smt2": {"time": "0:00:02.047913"},
    "array_init_pair_symmetr.smt2": {"time": "0:00:04.309207"},
    "array_horn_copy2.smt2": {"time": "0:00:00.816990"},
    "array_copy_nondet_add.smt2": {"time": "0:01:19.693039"},
    "array_init_increm_two_arrs_antisym.smt2": {"time": "0:01:00.233140"},
    "array_max_reverse_min.smt2": {"time": "0:00:51.828662"},
    "array_init_pair_symmetr3.smt2": {"time": "0:00:48.679862"},
    "array_init_and_copy.smt2": {"time": "0:00:08.225056"},
    "array_init_addvar3.smt2": {"time": "0:00:19.373809"},
}
interp = {}
strange = {
    "array_max_min_shift.smt2": {"error": "Error in Vmt"},
    "array_max_min_approx.smt2": {"error": "no new violations"},
    "array_equiv_1.smt2": {"error": "no new violations"},
    "array_two_counters_sum.smt2": {"error": "no new violations"},
    "array_double_inverse.smt2": {"error": "no new violations"},
    "array_tiling_poly6.smt2": {"error": "IC3IA gives 'Unknown'"},
    "array_init_and_copy_inverse.smt2": {"error": "no new violations"},
    "array_min_and_copy_inverse.smt2": {"error": "no new violations"},
    "array_init_pair_symmetr4.smt2": {"error": "IC3IA gives 'Unknown'"},
    "array_min_and_copy_shift_sum_add.smt2": {"error": "no new violations"},
    "array_min_and_copy_shift.smt2": {"error": "no new violations"},
    "array_equiv_2.smt2": {"error": "IC3IA gives 'Unknown'"},
}
timeouts = [
    "array_hybr_sum.smt2",
    "array_init_increm_twice_const.smt2",
    "array_tiling_poly4.smt2",
    "array_tiling_poly2.smt2",
    "array_init_addvar.smt2",
    "array_init_increm_two_arrs_antisym_const.smt2",
    "array_init_addvar5.smt2",
    "array_init_reverse_mult.smt2",
    "array_init_increm.smt2",
    "array_init_addvar2.smt2",
    "array_init_pair_sum.smt2",
    "array_init_doubl2.smt2",
    "array_init_increm_two_arrs_const.smt2",
    "array_init_both_ends_multiple_sum.smt2",
    "array_init_both_ends_multiple.smt2",
    "array_zero_sum_m2.smt2",
    "array_init_doubl.smt2",
    "array_init_doubl3.smt2",
    "array_init_symmetr_swap_const.smt2",
    "array_init_pair_sum_const.smt2",
    "array_standard_copy4.smt2",
    "array_init_addvar4.smt2",
    "array_init_symmetr_swap.smt2",
    "array_min_and_copy_shift_sum.smt2",
    "array_init_increm_const.smt2",
    "array_init_addvar6.smt2",
    "array_init_pair_symmetr2.smt2",
    "array_init_increm_two_arrs.smt2",
    "array_two_counters_add.smt2",
    "array_equiv_3.smt2",
]

print(
    f"UnCondHist1 Mutliple | good: {len(good)}, proph: {len(proph)}, timeout: {len(timeouts)}, error: {len(strange)}"
)
