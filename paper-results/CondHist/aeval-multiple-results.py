good = {
    "array_tiling_poly4.smt2": {"time": "0:00:03.833329", "num_refinements": 1},
    "array_tiling_poly2.smt2": {"time": "0:00:09.446927", "num_refinements": 3},
    "array_nest_split_05.smt2": {"time": "0:00:00.039361", "num_refinements": 0},
    "array_max_min_shift.smt2": {"time": "0:00:02.665817", "num_refinements": 1},
    "array2dim_copy.smt2": {"time": "0:00:00.050390", "num_refinements": 0},
    "array_hybr_nest_2.smt2": {"time": "0:00:00.051243", "num_refinements": 0},
    "array2dim_init_j.smt2": {"time": "0:00:00.060910", "num_refinements": 0},
    "array_max_min_approx.smt2": {"time": "0:00:07.962232", "num_refinements": 3},
    "array_init_reverse_mult.smt2": {"time": "0:00:01.864619", "num_refinements": 2},
    "array_two_counters_sum.smt2": {"time": "0:00:54.704222", "num_refinements": 5},
    "array_max_min.smt2": {"time": "0:00:00.089385", "num_refinements": 0},
    "array_min_and_copy.smt2": {"time": "0:00:01.975180", "num_refinements": 1},
    "array2dim_rec2.smt2": {"time": "0:00:00.053360", "num_refinements": 0},
    "array_double_inverse.smt2": {"time": "0:00:03.695432", "num_refinements": 3},
    "array_nest_split_01.smt2": {"time": "0:00:00.038847", "num_refinements": 0},
    "array_init_both_ends_multiple.smt2": {
        "time": "0:00:09.095076",
        "num_refinements": 3,
    },
    "array_hybr_add.smt2": {"time": "0:00:01.663831", "num_refinements": 1},
    "array2dim_init.smt2": {"time": "0:00:00.049356", "num_refinements": 0},
    "array2dim_init_i.smt2": {"time": "0:00:00.060413", "num_refinements": 0},
    "array_horn_copy2.smt2": {"time": "0:00:00.544790", "num_refinements": 1},
    "array_bubble_sort_rev.smt2": {"time": "0:00:00.014459", "num_refinements": 0},
    "array_init_increm_two_arrs_antisym.smt2": {
        "time": "0:00:06.551002",
        "num_refinements": 4,
    },
    "array_min_and_copy_inverse.smt2": {"time": "0:00:07.529551", "num_refinements": 1},
    "array_init_addvar7.smt2": {"time": "0:00:00.296851", "num_refinements": 0},
    "array_init_symmetr_swap.smt2": {"time": "0:00:13.943033", "num_refinements": 5},
    "array_hybr_nest_3.smt2": {"time": "0:00:00.051613", "num_refinements": 0},
    "array_nest_split_04.smt2": {"time": "0:00:00.038771", "num_refinements": 0},
    "array_hybr_nest_1.smt2": {"time": "0:00:00.049920", "num_refinements": 0},
    "array_hybr_nest_5.smt2": {"time": "0:00:00.050045", "num_refinements": 0},
    "array_hybr_nest_4.smt2": {"time": "0:00:00.051822", "num_refinements": 0},
    "array_bubble_sort.smt2": {"time": "0:00:00.014234", "num_refinements": 0},
    "array_min_and_copy_shift.smt2": {"time": "0:00:01.274317", "num_refinements": 1},
    "array_nest_split_03.smt2": {"time": "0:00:00.038856", "num_refinements": 0},
    "array_nest_split_02.smt2": {"time": "0:00:00.038630", "num_refinements": 0},
    "array2dim_rec1.smt2": {"time": "0:00:00.052358", "num_refinements": 0},
    "array_equiv_1.smt2": {"time": "0:00:33.906516", "num_refinements": 4},
    "array_init_increm_two_arrs_antisym_const.smt2": {
        "time": "0:00:06.685669",
        "num_refinements": 4,
    },
}
proph = {}
interp = {
    "array_init_increm_twice_const.smt2": {
        "time": "0:00:13.195310",
        "num_refinements": 4,
        "num_proph": 3,
        "interpolant": "[Z == i, Read(a, i) >= 0, Not(Read(a_next, Z_next) + -2 >= 0)]",
    },
    "array_init_increm_two_arrs_const.smt2": {
        "time": "0:00:15.415241",
        "num_refinements": 5,
        "num_proph": 1,
        "interpolant": "[Not(Read(b_next, Z_next) <= Read(a_next, Z_next))]",
    },
    "array_init_symmetr_swap_const.smt2": {
        "time": "0:00:19.482563",
        "num_refinements": 5,
        "num_proph": 1,
        "interpolant": "[Read(b, i) + x == 0]",
    },
    "array_init_increm_const.smt2": {
        "time": "0:00:08.027237",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) + -1 >= 0)]",
    },
    "array_init_doubl2.smt2": {
        "time": "0:00:09.766471",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Z == 1]",
    },
    "array_hybr_sum.smt2": {
        "time": "0:00:04.098505",
        "num_refinements": 2,
        "num_proph": 1,
        "interpolant": "[j >= 0]",
    },
    "array_init_addvar.smt2": {
        "time": "0:00:08.805000",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Z == 1]",
    },
    "array_init_addvar5.smt2": {
        "time": "0:00:25.527995",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[N <= i + 1]",
    },
    "array_init_increm_twice.smt2": {
        "time": "0:00:12.295026",
        "num_refinements": 4,
        "num_proph": 3,
        "interpolant": "[Z == i, Read(a, i) >= 0, Not(Z == i)]",
    },
    "array_init_increm.smt2": {
        "time": "0:00:08.988476",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) + -1 >= 0)]",
    },
    "array_init_addvar2.smt2": {
        "time": "0:00:13.417231",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) + -2 >= 0)]",
    },
    "array_init_pair_sum.smt2": {
        "time": "0:00:08.748376",
        "num_refinements": 3,
        "num_proph": 1,
        "interpolant": "[Read(c, Z) + -3 >= 0]",
    },
    "array_init_nondet_vars_plus_ind.smt2": {
        "time": "0:00:11.943313",
        "num_refinements": 3,
        "num_proph": 1,
        "interpolant": "[Not(Read(c_next, Z_next) <= -7720)]",
    },
    "array_init_both_ends_multiple_sum.smt2": {
        "time": "0:01:08.266354",
        "num_refinements": 5,
        "num_proph": 2,
        "interpolant": "[Not(sum + Read(a, i) <= 0), sum == 0]",
    },
    "array_init_and_copy_const.smt2": {
        "time": "0:00:06.436311",
        "num_refinements": 3,
        "num_proph": 1,
        "interpolant": "[Not(Read(b_next, Z_next) + -1 == 0)]",
    },
    "array_init_pair_symmetr.smt2": {
        "time": "0:00:16.280499",
        "num_refinements": 5,
        "num_proph": 1,
        "interpolant": "[Not(Read(c_next, Z_next) == 0)]",
    },
    "array_init_doubl.smt2": {
        "time": "0:00:10.086883",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) + -2 >= 0)]",
    },
    "array_init_doubl3.smt2": {
        "time": "0:00:09.581903",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) <= -28100)]",
    },
    "array_copy_nondet_add.smt2": {
        "time": "0:00:54.927789",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[N <= i + 1]",
    },
    "array_max_reverse_min.smt2": {
        "time": "0:00:28.303541",
        "num_refinements": 3,
        "num_proph": 1,
        "interpolant": "[Not(Read(c_next, Z_next) <= max_next)]",
    },
    "array_init_addvar4.smt2": {
        "time": "0:00:10.915315",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Z == 1]",
    },
    "array_init_pair_symmetr3.smt2": {
        "time": "0:00:12.388022",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(N_next == Read(c_next, Z_next))]",
    },
    "array_init_and_copy.smt2": {
        "time": "0:00:06.420061",
        "num_refinements": 3,
        "num_proph": 1,
        "interpolant": "[Not(Read(b_next, Z_next) + -1 == 0)]",
    },
    "array_init_addvar3.smt2": {
        "time": "0:00:09.497893",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Not(Read(a_next, Z_next) <= -32284)]",
    },
    "array_min_and_copy_shift_sum.smt2": {
        "time": "0:00:25.168893",
        "num_refinements": 3,
        "num_proph": 2,
        "interpolant": "[Read(b, i) >= 0, k >= 0]",
    },
    "array_init_addvar6.smt2": {
        "time": "0:01:17.947418",
        "num_refinements": 4,
        "num_proph": 1,
        "interpolant": "[Z == 1]",
    },
    "array_init_pair_symmetr2.smt2": {
        "time": "0:00:27.438838",
        "num_refinements": 6,
        "num_proph": 2,
        "interpolant": "[Not(Read(c_next, Z_next) + -1 >= 0), Read(Write(c, i, Read(a, i) + -1*Read(b, i)), Z) + -1 >= 0]",
    },
    "array_init_increm_two_arrs.smt2": {
        "time": "0:00:16.272574",
        "num_refinements": 5,
        "num_proph": 1,
        "interpolant": "[Not(Read(b_next, Z_next) <= Read(a_next, Z_next))]",
    },
    "array_min_and_copy_shift_sum_add.smt2": {
        "time": "0:00:12.036053",
        "num_refinements": 2,
        "num_proph": 1,
        "interpolant": "[k >= 0]",
    },
}
strange = {
    "array_tiling_poly6.smt2": {"error": "IC3IA gives 'Unknown'"},
    "array_init_pair_symmetr4.smt2": {"error": "IC3IA gives 'Unknown'"},
    "array_equiv_2.smt2": {"error": "IC3IA gives 'Unknown'"},
    "array_init_pair_sum_const.smt2": {"error": "IC3IA gives 'Unknown'"},
}
timeouts = [
    "array_zero_sum_m2.smt2",
    "array_init_and_copy_inverse.smt2",
    "array_standard_copy4.smt2",
    "array_two_counters_add.smt2",
    "array_equiv_3.smt2",
]

print(
    f"CondHist Multiple | good: {len(good)}, interp: {len(interp)}, timeout: {len(timeouts)}, error: {len(strange)}"
)
