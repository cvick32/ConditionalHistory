(set-logic HORN)
(declare-fun inv ((Array Int Int) (Array Int Int) Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (b (Array Int Int)) (N Int))
  (! (inv a b 0 (- N 1) N) :weight 0)))
(assert (forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (j Int)
         (a1 (Array Int Int))
         (b1 (Array Int Int))
         (i1 Int)
         (j1 Int)
         (N Int))
  (! (=> (and (inv a b i j N)
              (< i N)
              (>= j 0)
              (= a1 (store a i 1))
              (= b1 (store b j 1))
              (= i1 (+ i 1))
              (= j1 (- j 1)))
         (inv a1 b1 i1 j1 N))
     :weight 0)))
(assert (forall ((i Int)
         (j Int)
         (N Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (i1 Int))
  (! (let ((a!1 (and (inv a b i j N)
                     (not (and (< i N) (>= j 0)))
                     (< 0 i1)
                     (< i1 N)
                     (not (= (select a i1) (select b i1))))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
