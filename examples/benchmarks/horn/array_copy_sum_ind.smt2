(set-logic HORN)
(declare-fun inv ((Array Int Int) (Array Int Int) (Array Int Int) Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (b (Array Int Int)) (c (Array Int Int)))
  (! (inv a b c 0) :weight 0)))
(assert (forall ((c (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (c1 (Array Int Int))
         (i1 Int))
  (! (let ((a!1 (= (store c i (+ (select a i) (select b i))) c1)))
       (=> (and (inv a b c i) a!1 (= i1 (+ i 1))) (inv a b c1 i1)))
     :weight 0)))
(assert (forall ((i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i1 Int))
  (! (let ((a!1 (not (= (+ (select a i1) (select b i1)) (select c i1)))))
       (=> (and (inv a b c i) (< 0 i1) (< i1 i) a!1) fail))
     :weight 0)))
(assert (not fail))
(check-sat)
