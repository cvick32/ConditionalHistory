(set-logic HORN)
(declare-fun inv ((Array Int Int) (Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (b (Array Int Int)) (N Int))
  (! (inv a b 0 N) :weight 0)))
(assert (forall ((a (Array Int Int))
         (i Int)
         (a1 (Array Int Int))
         (b (Array Int Int))
         (i1 Int)
         (N Int))
  (! (let ((a!1 (ite (>= (select b i) 0)
                     (store a i (select b i))
                     (store a i (select a (- i 1))))))
     (let ((a!2 (and (inv a b i N)
                     (< i N)
                     (= a1 (ite (= i 0) (store a i 0) a!1))
                     (= i1 (+ i 1)))))
       (=> a!2 (inv a1 b i1 N))))
     :weight 0)))
(assert (forall ((b (Array Int Int)) (i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv a b i N)
                     (>= i N)
                     (<= 0 i1)
                     (< i1 N)
                     (not (>= (select a i1) 0)))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
