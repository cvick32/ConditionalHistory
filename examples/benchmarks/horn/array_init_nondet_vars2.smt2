(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (j Int) (k Int) (n Int))
  (! (=> (and (> j 0) (> 0 k)) (inv a 1 j k n)) :weight 0)))
(assert (forall ((a (Array Int Int))
         (i Int)
         (a1 (Array Int Int))
         (i1 Int)
         (j Int)
         (k Int)
         (n Int))
  (! (let ((a!1 (= (store a i (+ i (* j k))) a1)))
       (=> (and (inv a i j k n) (< i n) a!1 (= i1 (+ i 1))) (inv a1 i1 j k n)))
     :weight 0)))
(assert (forall ((j Int) (k Int) (i Int) (n Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv a i j k n)
                     (>= i n)
                     (< 0 i1)
                     (< i1 n)
                     (not (< (select a i1) i1)))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
