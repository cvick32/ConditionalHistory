(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (N Int)) (! (inv (store a 0 0) 1 N) :weight 0)))
(assert (forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (let ((a!1 (store a i (+ 1 (select a (- i 1))))))
     (let ((a!2 (ite (<= (select a (- i 1)) 10) a!1 (store a i 100))))
       (=> (and (inv a i N) (< i N) (= a1 a!2) (= i1 (+ i 1))) (inv a1 i1 N))))
     :weight 0)))
(assert (forall ((i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv a i N)
                     (>= i N)
                     (< 11 i1)
                     (< i1 N)
                     (not (= (select a i1) 100)))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
