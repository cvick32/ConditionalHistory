(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (i Int) (S Int))
  (! (=> (and (> S 1) (= i (- S 2))) (inv a i S)) :weight 0)))
(assert (forall ((a (Array Int Int))
         (a1 (Array Int Int))
         (i Int)
         (a2 (Array Int Int))
         (i1 Int)
         (S Int))
  (! (let ((a!1 (and (inv a i S)
                     (<= 0 i)
                     (= i1 (- i 1))
                     (= a1 (store a i i))
                     (= a2 (store a1 (+ i 1) (+ i 1))))))
       (=> a!1 (inv a2 i1 S)))
     :weight 0)))
(assert (forall ((i Int) (S Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv a i S)
                     (not (<= 0 i))
                     (<= 0 i1)
                     (< i1 S)
                     (not (<= i1 (select a i1))))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
