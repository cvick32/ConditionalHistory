(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (i Int) (S Int))
  (=> (and (> S 1) (= i 0)) (inv a i S))))
(assert (forall ((a (Array Int Int))
         (a1 (Array Int Int))
         (i Int)
         (a2 (Array Int Int))
         (i1 Int)
         (S Int))
  (let ((a!1 (= a1 (ite (< (+ i 1) S) (store a (+ i 1) i) a))))
    (=> (and (inv a i S) (< i S) (= i1 (+ i 1)) a!1 (= a2 (store a1 i i)))
        (inv a2 i1 S)))))
(assert (forall ((i Int) (S Int) (a (Array Int Int)) (i1 Int))
  (let ((a!1 (and (inv a i S)
                  (not (< i S))
                  (<= 0 i1)
                  (< i1 S)
                  (not (<= i1 (select a i1))))))
    (=> a!1 fail))))
(assert (not fail))
(check-sat)
