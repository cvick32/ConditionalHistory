(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (S Int)) (=> (>= S 0) (inv a 0 S))))
(assert (forall ((a (Array Int Int))
         (a1 (Array Int Int))
         (i Int)
         (a2 (Array Int Int))
         (i1 Int)
         (S Int))
  (let ((a!1 (ite (> (select a (* 2 i)) (* 2 i)) (store a (* 2 i) (* 2 i)) a))
        (a!2 (> (select a1 (+ (* 2 i) 1)) (+ (* 2 i) 1))))
  (let ((a!3 (ite a!2 (store a1 (+ (* 2 i) 1) (+ (* 2 i) 1)) a1)))
    (=> (and (inv a i S) (< i S) (= a1 a!1) (= a2 a!3) (= i1 (+ i 1)))
        (inv a2 i1 S))))))
(assert (forall ((i Int) (S Int) (a (Array Int Int)) (i1 Int))
  (let ((a!1 (and (inv a i S)
                  (not (< i S))
                  (< 0 i1)
                  (< i1 (* 2 S))
                  (not (<= (select a i1) i1)))))
    (=> a!1 fail))))
(assert (not fail))
(check-sat)
