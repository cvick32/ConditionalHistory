(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (N Int)) (! (inv a 50 0 N) :weight 0)))
(assert (forall ((a (Array Int Int))
         (y Int)
         (i Int)
         (a1 (Array Int Int))
         (y1 Int)
         (i1 Int)
         (N Int))
  (! (let ((a!1 (and (inv a y i N)
                     (< i N)
                     (= y1 (ite (< i 50) y (+ y 1)))
                     (= a1 (store a i (- i y)))
                     (= i1 (+ i 1)))))
       (=> a!1 (inv a1 y1 i1 N)))
     :weight 0)))
(assert (forall ((y Int) (i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv a y i N)
                     (>= i N)
                     (<= 50 i1)
                     (< i1 N)
                     (not (= 0 (select a i1))))))
       (=> a!1 fail))
     :weight 0)))
(assert (not fail))
(check-sat)
