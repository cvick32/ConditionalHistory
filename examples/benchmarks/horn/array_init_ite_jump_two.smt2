(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (N Int)) (! (inv a 0 7 13 N) :weight 0)))
(assert (forall ((a (Array Int Int))
         (i Int)
         (a1 (Array Int Int))
         (i1 Int)
         (val1 Int)
         (val2 Int)
         (N Int))
  (! (let ((a!1 (= a1
                   (ite (= val1 i)
                        (store a i 0)
                        (ite (= val2 i) (store a i 10) (store a i i))))))
       (=> (and (inv a i val1 val2 N) (<= i N) a!1 (= i1 (+ i 1)))
           (inv a1 i1 val1 val2 N)))
     :weight 0)))
(assert (forall ((i Int) (N Int) (val1 Int) (a (Array Int Int)) (i1 Int) (val2 Int))
  (! (let ((a!1 (and (not (= (select a i1) val1)) (not (= (select a i1) val2)))))
       (=> (and (inv a i val1 val2 N) (> i N) (<= 0 i1) (<= i1 N) (not a!1))
           fail))
     :weight 0)))
(assert (not fail))
(check-sat)
