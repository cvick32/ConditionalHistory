(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int))) (inv a 0 0 0 100000)))
(assert (forall ((x Int)
         (m Int)
         (i Int)
         (a (Array Int Int))
         (i1 Int)
         (m1 Int)
         (x1 Int)
         (N Int))
  (let ((a!1 (= x1 (ite (<= x (select a i)) x (select a i))))
        (a!2 (= m1 (ite (<= m (select a i)) (select a i) m))))
    (=> (and (inv a i m x N) (< i N) a!1 a!2 (= i1 (+ i 1))) (inv a i1 m1 x1 N)))))
(assert (forall ((a (Array Int Int)) (i Int) (i1 Int) (N Int) (x Int) (m Int))
  (=> (and (inv a i m x N) (>= i N) (< 0 i1) (< i1 N) (not (<= x m))) fail)))
(assert (not fail))
(check-sat)
