(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (N Int)) (! (inv a 0 N) :weight 0)))
(assert (forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (=> (and (inv a i N) (< i N) (= i1 (+ i 1)) (= (store a i i) a1))
         (inv a1 i1 N))
     :weight 0)))
(assert (forall ((i Int) (a (Array Int Int)) (N Int) (i1 Int))
  (! (let ((a!1 (= N (+ (select a i1) (select a (- N i1))))))
       (=> (and (inv a i N) (>= i N) (< 0 i1) (< i1 N) (not a!1)) fail))
     :weight 0)))
(assert (not fail))
(check-sat)
