(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int)) (n Int)) (inv a 0 n)))
(assert (forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (n Int))
  (let ((a!1 (ite (= (select a i) 0)
                  (store a i (+ i (select a i)))
                  (store a i i))))
  (let ((a!2 (= (ite (= (select a i) i) a!1 (store a i i)) a1)))
    (=> (and (inv a i n) (< i n) (= i1 (+ i 1)) a!2) (inv a1 i1 n))))))
(assert (forall ((i Int) (n Int) (a (Array Int Int)) (i1 Int))
  (let ((a!1 (and (inv a i n)
                  (>= i n)
                  (< 0 i1)
                  (< i1 n)
                  (not (= (select a i1) i1)))))
    (=> a!1 fail))))
(assert (not fail))
(check-sat)
