(set-logic HORN)
(declare-fun inv ((Array Int Int) Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((a (Array Int Int))) (! (inv a 0 100) :weight 0)))
(assert (forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (let ((a!1 (= a1 (ite (< i N) (store a i i) (store a i (- i N))))))
       (=> (and (inv a i N) (< i (* 2 N)) a!1 (= i1 (+ i 1))) (inv a1 i1 N)))
     :weight 0)))
(assert (forall ((i Int) (a (Array Int Int)) (i1 Int) (N Int))
  (! (let ((a!1 (not (= (select a i1) (select a (+ i1 N))))))
       (=> (and (inv a i N) (>= i (* 2 N)) (>= i1 0) (< i1 N) a!1) fail))
     :weight 0)))
(assert (not fail))
(check-sat)
