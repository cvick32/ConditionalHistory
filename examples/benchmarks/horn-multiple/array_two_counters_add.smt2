(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (N Int)) (! (inv1 a 0 N) ))(forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (=> (and (inv1 a i N) (< i N) (= (store a i i) a1) (= i1 (+ i 1)))
         (inv1 a1 i1 N))
     ))(forall ((i Int) (a (Array Int Int)) (N Int))
  (! (=> (and (inv1 a i N) (>= i N)) (inv2 a 0 (- N 1) N)) ))(forall ((a (Array Int Int))
         (i Int)
         (j Int)
         (a1 (Array Int Int))
         (i1 Int)
         (j1 Int)
         (N Int))
  (! (let ((a!1 (= a1 (store a j (+ (select a j) (select a i))))))
       (=> (and (inv2 a i j N)
                (< i N)
                (>= j 0)
                a!1
                (= i1 (+ i 1))
                (= j1 (- j 1)))
           (inv2 a1 i1 j1 N)))
     ))(forall ((i Int) (j Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv2 a i j N)
                     (or (>= i N) (< j 0))
                     (<= 0 i1)
                     (< i1 N)
                     (not (>= (select a i1) 0)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)