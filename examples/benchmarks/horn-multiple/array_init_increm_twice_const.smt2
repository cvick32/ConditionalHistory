(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int))) (! (inv1 a 0 100000) ))(forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (=> (and (inv1 a i N) (< i N) (= (store a i 0) a1) (= i1 (+ i 1)))
         (inv1 a1 i1 N))
     ))(forall ((i Int) (a (Array Int Int)) (N Int))
  (! (=> (and (inv1 a i N) (>= i N)) (inv2 a 0 N)) ))(forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (let ((a!1 (select (store a i (+ (select a i) 1)) i)))
     (let ((a!2 (and (inv2 a i N)
                     (< i N)
                     (= i1 (+ i 1))
                     (= (store a i (+ a!1 1)) a1))))
       (=> a!2 (inv2 a1 i1 N))))
     ))(forall ((i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv2 a i N)
                     (>= i N)
                     (< 0 i1)
                     (< i1 N)
                     (not (>= (select a i1) 2)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)