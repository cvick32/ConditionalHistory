(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) (Array Int Int) Int Int))(declare-rel inv3 ( (Array Int Int) (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (N Int)) (! (inv1 a 0 N) ))(forall ((a (Array Int Int)) (i Int) (a1 (Array Int Int)) (i1 Int) (N Int))
  (! (=> (and (inv1 a i N) (< i N) (= i1 (+ i 1)) (= (store a i i) a1))
         (inv1 a1 i1 N))
     ))(forall ((i Int) (a (Array Int Int)) (b (Array Int Int)) (N Int))
  (! (=> (and (inv1 a i N) (not (< i N))) (inv2 a b 0 N)) ))(forall ((b (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b1 (Array Int Int))
         (i1 Int)
         (N Int))
  (! (let ((a!1 (and (inv2 a b i N)
                     (< i N)
                     (= i1 (+ i 1))
                     (= (store b (- N i1) i) b1))))
       (=> a!1 (inv2 a b1 i1 N)))
     ))(forall ((i Int) (a (Array Int Int)) (b (Array Int Int)) (N Int))
  (! (=> (and (inv2 a b i N) (not (< i N))) (inv3 a b 0 0 N)) ))(forall ((sum Int)
         (i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (i1 Int)
         (sum1 Int)
         (N Int))
  (! (let ((a!1 (+ sum (- (select a i) (select b (- N i1))))))
       (=> (and (inv3 a b i sum N) (< i N) (= i1 (+ i 1)) (= sum1 a!1))
           (inv3 a b i1 sum1 N)))
     ))(forall ((a (Array Int Int)) (b (Array Int Int)) (i Int) (N Int) (sum Int))
  (! (=> (and (inv3 a b i sum N) (>= i N) (not (= sum 0))) fail) ))(assert (not fail))
(check-sat)