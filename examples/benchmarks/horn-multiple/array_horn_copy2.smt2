(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) (Array Int Int) Int Int))(declare-rel fail ( ))(forall ((A (Array Int Int)) (B (Array Int Int)) (I Int) (N Int))
  (! (=> (= I 0) (inv1 A B I N)) ))(forall ((A (Array Int Int))
         (I Int)
         (A1 (Array Int Int))
         (B (Array Int Int))
         (I1 Int)
         (N Int))
  (! (let ((a!1 (and (inv1 A B I N)
                     (= A1 (store A I (select B I)))
                     (= I1 (+ I 1))
                     (< I N))))
       (=> a!1 (inv1 A1 B I1 N)))
     ))(forall ((I Int) (A (Array Int Int)) (B (Array Int Int)) (I1 Int) (N Int))
  (! (=> (and (>= I N) (= I1 0) (inv1 A B I N)) (inv2 A B I1 N)) ))(forall ((I Int) (A (Array Int Int)) (B (Array Int Int)) (I1 Int) (N Int))
  (! (=> (and (= I1 (+ I 1)) (inv2 A B I N) (< I N)) (inv2 A B I1 N)) ))(forall ((I Int) (N Int) (A (Array Int Int)) (B (Array Int Int)) (Z Int))
  (! (let ((a!1 (and (inv2 A B I N)
                     (>= Z 0)
                     (< Z N)
                     (not (= (select A Z) (select B Z))))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)