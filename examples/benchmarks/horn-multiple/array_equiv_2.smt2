(set-logic HORN)
(declare-rel inv0 ( (Array Int Int) Int Int Int))(declare-rel inv1 ( (Array Int Int) (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (n Int)) (! (inv0 a 0 100 n) ))(forall ((a (Array Int Int))
         (i Int)
         (a1 (Array Int Int))
         (i1 Int)
         (c Int)
         (n Int))
  (! (let ((a!1 (store a i (+ c (select a (- i 1))))))
     (let ((a!2 (and (inv0 a i c n)
                     (< i n)
                     (= a1 (ite (= i 0) (store a i 0) a!1))
                     (= i1 (+ i 1)))))
       (=> a!2 (inv0 a1 i1 c n))))
     ))(forall ((i Int) (a (Array Int Int)) (b (Array Int Int)) (c Int) (n Int))
  (! (=> (and (inv0 a i c n) (not (< i n))) (inv1 a b 0 c n)) ))(forall ((b (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b1 (Array Int Int))
         (i1 Int)
         (c Int)
         (n Int))
  (! (let ((a!1 (and (inv1 a b i c n)
                     (< i n)
                     (= b1 (store b i (* i c)))
                     (= i1 (+ i 1)))))
       (=> a!1 (inv1 a b1 i1 c n)))
     ))(forall ((c Int)
         (i Int)
         (n Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (i1 Int))
  (! (let ((a!1 (and (inv1 a b i c n)
                     (not (< i n))
                     (<= 0 i1)
                     (< i1 n)
                     (not (= (select a i1) (select b i1))))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)