(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) (Array Int Int) (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (N Int))
  (! (inv1 a ((as const (Array Int Int)) 1) ((as const (Array Int Int)) 2) 0 N)
     ))(forall ((a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i Int)
         (N Int))
  (! (=> (and (inv1 a b c i N) (< i N)) (inv2 a b c i 0 N)) ))(forall ((a (Array Int Int))
         (j Int)
         (a1 (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i Int)
         (j1 Int)
         (N Int))
  (! (let ((a!1 (ite (= i 0)
                     (store a j (select b j))
                     (store a j (+ (select a j) (select c j))))))
       (=> (and (inv2 a b c i j N) (< j N) (= a1 a!1) (= j1 (+ j 1)))
           (inv2 a1 b c i j1 N)))
     ))(forall ((j Int)
         (i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (i1 Int)
         (N Int))
  (! (=> (and (inv2 a b c i j N) (not (< j N)) (= i1 (+ i 1)))
         (inv1 a b c i1 N))
     ))(forall ((b (Array Int Int))
         (c (Array Int Int))
         (i Int)
         (N Int)
         (a (Array Int Int))
         (i1 Int))
  (! (let ((a!1 (and (inv1 a b c i N)
                     (not (< i N))
                     (<= 0 i1)
                     (< i1 N)
                     (not (> (select a i1) 0)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)