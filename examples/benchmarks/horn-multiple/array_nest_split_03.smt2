(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int Int))(declare-rel inv2 ( (Array Int Int) Int Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (M Int) (N Int))
  (! (=> (>= M 0) (inv1 a 0 M N)) ))(forall ((a (Array Int Int)) (i Int) (M Int) (N Int))
  (! (=> (and (inv1 a i M N) (< i N)) (inv2 a i 0 M N)) ))(forall ((a (Array Int Int))
         (j Int)
         (a1 (Array Int Int))
         (i Int)
         (j1 Int)
         (M Int)
         (N Int))
  (! (let ((a!1 (= a1 (ite (= i j) (store a j M) (store a j (select a j))))))
       (=> (and (inv2 a i j M N) (< j N) a!1 (= j1 (+ j 1))) (inv2 a1 i j1 M N)))
     ))(forall ((j Int) (i Int) (a (Array Int Int)) (i1 Int) (M Int) (N Int))
  (! (=> (and (inv2 a i j M N) (not (< j N)) (= i1 (+ i 1))) (inv1 a i1 M N))
     ))(forall ((M Int) (i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv1 a i M N)
                     (not (< i N))
                     (<= 0 i1)
                     (< i1 N)
                     (not (>= (select a i1) 0)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)