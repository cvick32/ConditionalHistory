(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int Int))(declare-rel inv2 ( (Array Int Int) (Array Int Int) Int Int Int))(declare-rel inv3 ( (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (min Int) (N Int)) (! (inv1 a 0 min N) ))(forall ((max Int) (i Int) (a (Array Int Int)) (i1 Int) (max1 Int) (N Int))
  (! (let ((a!1 (= max1 (ite (< max (select a i)) (select a i) max))))
       (=> (and (inv1 a i max N) (< i N) a!1 (= i1 (+ i 1))) (inv1 a i1 max1 N)))
     ))(forall ((i Int) (a (Array Int Int)) (b (Array Int Int)) (max Int) (N Int))
  (! (=> (and (inv1 a i max N) (>= i N)) (inv2 a b 0 max N)) ))(forall ((b (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b1 (Array Int Int))
         (i1 Int)
         (max Int)
         (N Int))
  (! (let ((a!1 (= (store b i (- (select a i))) b1)))
       (=> (and (inv2 a b i max N) (< i N) a!1 (= i1 (+ i 1)))
           (inv2 a b1 i1 max N)))
     ))(forall ((i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (c (Array Int Int))
         (max Int)
         (N Int))
  (! (=> (and (inv2 a b i max N) (>= i N)) (inv3 a b c 0 max N)) ))(forall ((c (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (c1 (Array Int Int))
         (i1 Int)
         (max Int)
         (N Int))
  (! (let ((a!1 (= (store c i (- (select b i))) c1)))
       (=> (and (inv3 a b c i max N) (< i N) a!1 (= i1 (+ i 1)))
           (inv3 a b c1 i1 max N)))
     ))(forall ((a (Array Int Int))
         (b (Array Int Int))
         (i Int)
         (N Int)
         (c (Array Int Int))
         (i1 Int)
         (max Int))
  (! (let ((a!1 (and (inv3 a b c i max N)
                     (>= i N)
                     (< 0 i1)
                     (< i1 N)
                     (not (<= (select c i1) max)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)