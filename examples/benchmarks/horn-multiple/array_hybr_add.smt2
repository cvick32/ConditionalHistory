(set-logic HORN)
(declare-rel inv1 (Int Int Int))(declare-rel inv2 ( (Array Int Int) Int Int Int))(declare-rel fail ( ))(forall ((N Int)) (! (=> (> N 0) (inv1 N N N)) ))(forall ((j Int) (i Int) (i1 Int) (j1 Int) (N Int))
  (! (=> (and (inv1 i j N) (> i 0) (= j1 (- j i)) (= i1 (- i 1)))
         (inv1 i1 j1 N))
     ))(forall ((i Int) (a (Array Int Int)) (j Int) (N Int))
  (! (=> (and (inv1 i j N) (<= i 0)) (inv2 a j 0 N)) ))(forall ((a (Array Int Int))
         (i Int)
         (a1 (Array Int Int))
         (j Int)
         (i1 Int)
         (N Int))
  (! (=> (and (inv2 a j i N) (< i N) (= (store a i j) a1) (= i1 (+ i 1)))
         (inv2 a1 j i1 N))
     ))(forall ((j Int) (i Int) (a (Array Int Int)) (i1 Int) (N Int))
  (! (let ((a!1 (and (inv2 a j i N)
                     (>= i N)
                     (< 0 i1)
                     (< i1 N)
                     (not (<= (select a i1) N)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)