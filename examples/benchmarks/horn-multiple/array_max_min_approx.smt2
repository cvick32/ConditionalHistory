(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int Int Int))(declare-rel inv2 ( (Array Int Int) (Array Int Int) Int Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (min Int) (max Int) (N Int))
  (! (inv1 a 0 min max N) ))(forall ((min Int)
         (max Int)
         (i Int)
         (a (Array Int Int))
         (i1 Int)
         (min1 Int)
         (max1 Int)
         (N Int))
  (! (let ((a!1 (= min1 (ite (> min (select a i)) (select a i) min)))
           (a!2 (= max1 (ite (< max (select a i)) (select a i) max))))
       (=> (and (inv1 a i min max N) (< i N) a!1 a!2 (= i1 (+ i 1)))
           (inv1 a i1 min1 max1 N)))
     ))(forall ((i Int)
         (a (Array Int Int))
         (b (Array Int Int))
         (min Int)
         (max Int)
         (N Int))
  (! (=> (and (inv1 a i min max N) (>= i N)) (inv2 a b 0 min max N)) ))(forall ((b (Array Int Int))
         (i Int)
         (a (Array Int Int))
         (b1 (Array Int Int))
         (i1 Int)
         (min Int)
         (max Int)
         (N Int))
  (! (let ((a!1 (ite (< (- max (select a i)) (- (select a i) min))
                     (store b i max)
                     (store b i min))))
       (=> (and (inv2 a b i min max N) (< i N) (= a!1 b1) (= i1 (+ i 1)))
           (inv2 a b1 i1 min max N)))
     ))(forall ((a (Array Int Int))
         (i Int)
         (N Int)
         (min Int)
         (b (Array Int Int))
         (i1 Int)
         (max Int))
  (! (let ((a!1 (not (or (= (select b i1) min) (= (select b i1) max)))))
       (=> (and (inv2 a b i min max N) (>= i N) (< 0 i1) (< i1 N) a!1) fail))
     ))(assert (not fail))
(check-sat)