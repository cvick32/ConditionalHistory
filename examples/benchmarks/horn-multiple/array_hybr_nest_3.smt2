(set-logic HORN)
(declare-rel inv1 ( (Array Int Int) Int Int))(declare-rel inv2 ( (Array Int Int) Int Int Int Int))(declare-rel fail ( ))(forall ((a (Array Int Int)) (N Int)) (! (inv1 a 0 N) ))(forall ((a (Array Int Int)) (i Int) (N Int))
  (! (=> (and (inv1 a i N) (< i N)) (inv2 a i 0 1 N)) ))(forall ((k Int) (j Int) (a (Array Int Int)) (i Int) (j1 Int) (k1 Int) (N Int))
  (! (let ((a!1 (and (inv2 a i j k N)
                     (< j i)
                     (= k1 (+ k (select a j)))
                     (= j1 (+ j 1)))))
       (=> a!1 (inv2 a i j1 k1 N)))
     ))(forall ((j Int)
         (a (Array Int Int))
         (k Int)
         (i Int)
         (a1 (Array Int Int))
         (i1 Int)
         (N Int))
  (! (=> (and (inv2 a i j k N)
              (not (< j i))
              (= a1 (store a i k))
              (= i1 (+ i 1)))
         (inv1 a1 i1 N))
     ))(forall ((i Int) (N Int) (a (Array Int Int)) (i1 Int))
  (! (let ((a!1 (and (inv1 a i N)
                     (not (< i N))
                     (< 0 i1)
                     (< i1 N)
                     (not (>= (select a i1) 1)))))
       (=> a!1 fail))
     ))(assert (not fail))
(check-sat)