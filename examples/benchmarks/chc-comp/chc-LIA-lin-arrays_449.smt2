(set-logic HORN)
(declare-fun state (Int Int Int Int Int Bool (Array Int Int) (Array Int Int)) Bool)
(assert (forall ((|G_0| Int) (|F_1| Int) (|E_1| Int) (|C_1| Int) (|A_1| Int) (|.loc.7| Bool) (|B_1| (Array Int Int)) (|B| (Array Int Int)) (|.loc.13| Bool) (|.y.11| Int) (|.y.10| Int) (|.y.9| Int) (|.y.8| Int) (|.y.12| Int) (|.xtv.1| (Array Int Int)) (|.xiv.1| (Array Int Int))) (=> (and (and (= G_0 0) (= A_1 (select B C_1))) (not .loc.7)) (state |G_0| |F_1| |E_1| |C_1| |A_1| |.loc.7| |B_1| |B|))))
(assert (forall ((|G_0| Int) (|F_1| Int) (|E_1| Int) (|C_1| Int) (|A_1| Int) (|.loc.7| Bool) (|B_1| (Array Int Int)) (|B| (Array Int Int)) (|.loc.13| Bool) (|.y.11| Int) (|.y.10| Int) (|.y.9| Int) (|.y.8| Int) (|.y.12| Int) (|.xtv.1| (Array Int Int)) (|.xiv.1| (Array Int Int))) (=> (and (state |G_0| |F_1| |E_1| |C_1| |A_1| |.loc.7| |B_1| |B|) (let ((.def_25 (select B_1 C_1))) (let ((.def_39 (<= E_1 G_0))) (and (and (not .loc.7) (= A_1 .def_25)) (or (and (and (or (not (<= .def_25 F_1)) (not (<= 0 .def_25))) (and (and (not (<= E_1 C_1)) (and (<= 0 C_1) (<= 0 F_1))) .def_39)) .loc.13) (and (= C_1 .y.11) (and (= E_1 .y.10) (and (= F_1 .y.9) (and (= (+ G_0 (* (- 1) .y.8)) (- 1)) (and (= (select (store B_1 G_0 F_1) C_1) .y.12) (and (not .def_39) (not .loc.13)))))))))))) (state |.y.8| |.y.9| |.y.10| |.y.11| |.y.12| |.loc.13| |.xtv.1| |.xiv.1|))))
(assert (forall ((|G_0| Int) (|F_1| Int) (|E_1| Int) (|C_1| Int) (|A_1| Int) (|.loc.7| Bool) (|B_1| (Array Int Int)) (|B| (Array Int Int)) (|.loc.13| Bool) (|.y.11| Int) (|.y.10| Int) (|.y.9| Int) (|.y.8| Int) (|.y.12| Int) (|.xtv.1| (Array Int Int)) (|.xiv.1| (Array Int Int))) (=> (state |G_0| |F_1| |E_1| |C_1| |A_1| |.loc.7| |B_1| |B|) (not .loc.7))))
(check-sat)
