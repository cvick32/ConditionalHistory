(set-logic HORN)
(declare-fun state (Int Int Int Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Bool Int Int Int) Bool)
(assert (forall ((|B_2| Int) (|F_2| Int) (|D_2| Int) (|v_10| Int) (|G_2| (Array Int Int)) (|H_2| (Array Int Int)) (|I_2| (Array Int Int)) (|J_1| (Array Int Int)) (|.loc.10| Bool) (|F_3| Int) (|E_2| Int) (|H_3| Int) (|.loc.19| Bool) (|.y.11| Int) (|.y.12| Int) (|.y.13| Int) (|.y.14| Int) (|.y.15| (Array Int Int)) (|.y.16| (Array Int Int)) (|.y.17| (Array Int Int)) (|.y.18| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int)) (=> (and (and (<= 1 v_10) (= D_2 v_10)) (not .loc.10)) (state |B_2| |F_2| |D_2| |v_10| |G_2| |H_2| |I_2| |J_1| |.loc.10| |F_3| |E_2| |H_3|))))
(assert (forall ((|B_2| Int) (|F_2| Int) (|D_2| Int) (|v_10| Int) (|G_2| (Array Int Int)) (|H_2| (Array Int Int)) (|I_2| (Array Int Int)) (|J_1| (Array Int Int)) (|.loc.10| Bool) (|F_3| Int) (|E_2| Int) (|H_3| Int) (|.loc.19| Bool) (|.y.11| Int) (|.y.12| Int) (|.y.13| Int) (|.y.14| Int) (|.y.15| (Array Int Int)) (|.y.16| (Array Int Int)) (|.y.17| (Array Int Int)) (|.y.18| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int)) (=> (and (state |B_2| |F_2| |D_2| |v_10| |G_2| |H_2| |I_2| |J_1| |.loc.10| |F_3| |E_2| |H_3|) (let ((.def_35 (<= 0 D_2))) (let ((.def_37 (not .def_35))) (let ((.def_41 (or (and (= D_2 E_2) .def_35) (and .def_37 (not (<= E_2 0)))))) (let ((.def_44 (select J_1 E_2))) (let ((.def_46 (select I_2 E_2))) (let ((.def_47 (select I_2 H_3))) (let ((.def_49 (select G_2 H_3))) (let ((.def_50 (select G_2 E_2))) (let ((.def_66 (<= F_3 0))) (let ((.def_67 (not .def_66))) (let ((.def_88 (select I_2 F_3))) (let ((.def_91 (select G_2 F_3))) (and (and (and (= D_2 v_10) (not .loc.10)) .loc.19) (or (or (and (not (<= 0 E_2)) .def_41) (and (= (select J_1 H_3) .def_44) (and (= .def_46 .def_47) (and (= .def_49 .def_50) (and (= (+ F_3 (+ H_3 (* (- 1) .def_49))) 0) (and (not (<= 1 (+ E_2 (* (- 1) H_3)))) (and (<= H_3 E_2) (and (or (<= .def_50 E_2) (not (<= .def_46 E_2))) (and (or (and .def_37 .def_67) (and .def_35 (= D_2 F_3))) (and (not (= .def_44 1)) (and (not (<= H_3 0)) (= H_3 .def_47)))))))))))) (and (or (not (<= .def_88 F_3)) (or .def_66 (<= .def_91 F_3))) (and (= (select H_2 .def_88) 0) (and (= F_3 .def_88) (and (= (+ F_3 (+ E_2 (* (- 1) .def_91))) 0) (and (<= 1 D_2) (and .def_41 .def_67))))))))))))))))))))) (state |.y.11| |.y.12| |.y.13| |.y.14| |.y.15| |.y.16| |.y.17| |.y.18| |.loc.19| |.xtv.1| |.xtv.2| |.xtv.3|))))
(assert (forall ((|B_2| Int) (|F_2| Int) (|D_2| Int) (|v_10| Int) (|G_2| (Array Int Int)) (|H_2| (Array Int Int)) (|I_2| (Array Int Int)) (|J_1| (Array Int Int)) (|.loc.10| Bool) (|F_3| Int) (|E_2| Int) (|H_3| Int) (|.loc.19| Bool) (|.y.11| Int) (|.y.12| Int) (|.y.13| Int) (|.y.14| Int) (|.y.15| (Array Int Int)) (|.y.16| (Array Int Int)) (|.y.17| (Array Int Int)) (|.y.18| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int)) (=> (state |B_2| |F_2| |D_2| |v_10| |G_2| |H_2| |I_2| |J_1| |.loc.10| |F_3| |E_2| |H_3|) (not .loc.10))))
(check-sat)
