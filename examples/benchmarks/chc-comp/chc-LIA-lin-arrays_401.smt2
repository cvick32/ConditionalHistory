(set-logic HORN)
(declare-fun state (Int (Array Int Int) (Array Int Int) (Array Int Int) Int (Array Int Int)) Bool)
(assert (forall ((|B_0| Int) (|H| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|C| Int) (|L| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (let ((.def_16 (select F B_0))) (let ((.def_30 (select H C))) (let ((.def_31 (select H B_0))) (let ((.def_33 (select F C))) (let ((.def_40 (select G B_0))) (let ((.def_46 (select G C))) (let ((.def_50 (not (<= .def_33 C)))) (let ((.def_56 (select L C))) (and (and (= B_0 .def_16) (and (not (<= B_0 0)) (and (<= B_0 C) (and (not (<= (+ B_0 (* (- 1) C)) (- 4))) (and (= .def_30 .def_31) (= .def_16 .def_33)))))) (or (and (= (+ B_0 (* (- 1) .def_40)) (- 4)) (and (not (= .def_30 1)) (and (= .def_40 .def_46) (or (<= .def_46 C) .def_50)))) (and (= (select L B_0) .def_56) (and (or .def_50 (<= .def_30 C)) (and (not (= .def_56 1)) (and (= (select G .def_16) 0) (= (+ B_0 (* (- 1) .def_31)) (- 4)))))))))))))))) (state |B_0| |H| |F| |G| |C| |L|))))
(assert (forall ((|B_0| Int) (|H| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|C| Int) (|L| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (and (state |B_0| |H| |F| |G| |C| |L|) false) (state |.xiv.1| |.xiv.2| |.xiv.3| |.xiv.4| |.xiv.5| |.xiv.6|))))
(assert (forall ((|B_0| Int) (|H| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|C| Int) (|L| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (state |B_0| |H| |F| |G| |C| |L|) false)))
(check-sat)
