(set-logic HORN)
(declare-fun state (Int Int (Array Int Int) (Array Int Int) Int Int Int Int) Bool)
(assert (forall ((|L_2| Int) (|M_2| Int) (|P_2| (Array Int Int)) (|Q_2| (Array Int Int)) (|O_2| Int) (|K_2| Int) (|F_2| Int) (|J_2| Int) (|.xiv.1| Int) (|.xiv.2| Int) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| Int) (|.xiv.7| Int) (|.xiv.8| Int)) (=> (let ((.def_40 (<= 0 L_2))) (let ((.def_42 (<= 0 M_2))) (let ((.def_44 (and (not (= L_2 (- 1))) (and (not .def_40) .def_42)))) (let ((.def_47 (<= L_2 (- 1)))) (and (and (<= 0 J_2) (and (= (select Q_2 F_2) (select P_2 F_2)) (<= 0 K_2))) (or (or (and .def_40 (or (and (= (+ M_2 O_2) (- 1)) (and (not (= P_2 Q_2)) (and (not (= O_2 (- 1))) (<= 0 O_2)))) .def_44)) (and (not .def_47) (and .def_47 (and .def_42 (not (= L_2 0)))))) (and .def_44 (not (= (store Q_2 M_2 (+ (* (- 1) L_2) (- 1))) (store P_2 M_2 (+ (* (- 1) L_2) (- 1)))))))))))) (state |L_2| |M_2| |P_2| |Q_2| |O_2| |K_2| |F_2| |J_2|))))
(assert (forall ((|L_2| Int) (|M_2| Int) (|P_2| (Array Int Int)) (|Q_2| (Array Int Int)) (|O_2| Int) (|K_2| Int) (|F_2| Int) (|J_2| Int) (|.xiv.1| Int) (|.xiv.2| Int) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| Int) (|.xiv.7| Int) (|.xiv.8| Int)) (=> (and (state |L_2| |M_2| |P_2| |Q_2| |O_2| |K_2| |F_2| |J_2|) false) (state |.xiv.1| |.xiv.2| |.xiv.3| |.xiv.4| |.xiv.5| |.xiv.6| |.xiv.7| |.xiv.8|))))
(assert (forall ((|L_2| Int) (|M_2| Int) (|P_2| (Array Int Int)) (|Q_2| (Array Int Int)) (|O_2| Int) (|K_2| Int) (|F_2| Int) (|J_2| Int) (|.xiv.1| Int) (|.xiv.2| Int) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| Int) (|.xiv.7| Int) (|.xiv.8| Int)) (=> (state |L_2| |M_2| |P_2| |Q_2| |O_2| |K_2| |F_2| |J_2|) false)))
(check-sat)
