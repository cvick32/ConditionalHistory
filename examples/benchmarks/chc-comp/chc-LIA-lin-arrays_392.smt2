(set-logic HORN)
(declare-fun state (Int Int Int Int Int Int Int Bool Int Int (Array Int Int) Int (Array Int Int) (Array Int Int) Int) Bool)
(assert (forall ((|E_1| Int) (|D_1| Int) (|G_1| Int) (|H_1| Int) (|A_1| Int) (|I_0| Int) (|M_0| Int) (|.loc.2| Bool) (|L_0| Int) (|M_1| Int) (|C_1| (Array Int Int)) (|J_0| Int) (|B| (Array Int Int)) (|B_3| (Array Int Int)) (|H_3| Int) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|F_1| Int) (|K_0| Int) (|B_1| Int) (|.loc.3| Bool) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| (Array Int Int)) (|.xtv.4| Int) (|.xiv.1| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| Int)) (=> (and (and (and (= A_1 (select B H_1)) (= I_0 0)) (= E_1 0)) (not .loc.2)) (state |E_1| |D_1| |G_1| |H_1| |A_1| |I_0| |M_0| |.loc.2| |L_0| |M_1| |C_1| |J_0| |B| |B_3| |H_3|))))
(assert (forall ((|E_1| Int) (|D_1| Int) (|G_1| Int) (|H_1| Int) (|A_1| Int) (|I_0| Int) (|M_0| Int) (|.loc.2| Bool) (|L_0| Int) (|M_1| Int) (|C_1| (Array Int Int)) (|J_0| Int) (|B| (Array Int Int)) (|B_3| (Array Int Int)) (|H_3| Int) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|F_1| Int) (|K_0| Int) (|B_1| Int) (|.loc.3| Bool) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| (Array Int Int)) (|.xtv.4| Int) (|.xiv.1| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| Int)) (=> (and (state |E_1| |D_1| |G_1| |H_1| |A_1| |I_0| |M_0| |.loc.2| |L_0| |M_1| |C_1| |J_0| |B| |B_3| |H_3|) (let ((.def_32 (not .loc.2))) (let ((.def_42 (select C_1 H_1))) (let ((.def_77 (= K_0 0))) (let ((.def_80 (<= G_1 E_1))) (let ((.def_83 (not .def_80))) (let ((.def_86 (or .def_77 (= K_0 1)))) (let ((.def_95 (= (+ (* 2 L_0) (+ (* (- 1) F_1) K_0)) 0))) (let ((.def_98 (= (+ E_1 (* (- 1) F_1)) (- 2)))) (let ((.def_103 (= (+ H_1 (+ (* (- 1) M_0) (* (- 2) M_1))) 0))) (and (and (= M_0 .x.8) (and (= H_1 .x.7) (and (= G_1 .x.6) (and (= D_1 .x.5) (and (= A_1 .def_42) (and (or (= I_0 0) (= I_0 1)) (and (= (+ E_1 (+ (* (- 1) I_0) (* (- 2) J_0))) 0) (or (= M_0 1) (= M_0 0))))))))) (or (and (or (and .def_32 (and (and (= (+ H_1 (+ (* (- 1) M_0) (* (- 2) L_0))) 0) (and (= F_1 0) .def_77)) .def_80)) (and (and (and (and (and .loc.2 .def_83) .def_86) .def_95) .def_98) .def_103)) (and (= .def_42 B_1) .loc.3)) (and (= B_1 (select (store C_1 E_1 D_1) H_1)) (and (not .loc.3) (and .def_103 (and .def_98 (and .def_95 (and .def_86 (and .def_32 .def_83))))))))))))))))))) (state |F_1| |.x.5| |.x.6| |.x.7| |B_1| |K_0| |.x.8| |.loc.3| |.xtv.1| |.xtv.2| |.xtv.3| |.xtv.4| |.xiv.1| |.xpv.1| |.xpv.2|))))
(assert (forall ((|E_1| Int) (|D_1| Int) (|G_1| Int) (|H_1| Int) (|A_1| Int) (|I_0| Int) (|M_0| Int) (|.loc.2| Bool) (|L_0| Int) (|M_1| Int) (|C_1| (Array Int Int)) (|J_0| Int) (|B| (Array Int Int)) (|B_3| (Array Int Int)) (|H_3| Int) (|.x.8| Int) (|.x.7| Int) (|.x.6| Int) (|.x.5| Int) (|F_1| Int) (|K_0| Int) (|B_1| Int) (|.loc.3| Bool) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| (Array Int Int)) (|.xtv.4| Int) (|.xiv.1| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| Int)) (=> (state |E_1| |D_1| |G_1| |H_1| |A_1| |I_0| |M_0| |.loc.2| |L_0| |M_1| |C_1| |J_0| |B| |B_3| |H_3|) (let ((.def_124 (select B_3 E_1))) (not (and .loc.2 (and (and (and (and (and (not (= D_1 .def_124)) (and (or (= I_0 0) (= I_0 1)) (<= (+ E_1 (* (- 1) G_1)) (- 1)))) (= (+ E_1 (+ (* (- 1) I_0) (* (- 2) H_3))) 0)) (= A_1 .def_124)) (= E_1 H_1)) (= I_0 M_0))))))))
(check-sat)
