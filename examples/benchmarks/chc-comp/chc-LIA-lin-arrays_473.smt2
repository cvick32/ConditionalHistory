(set-logic HORN)
(declare-fun state (Int Int Int Int (Array Int Int) Int Int Int Int (Array Int Int) Bool Int) Bool)
(assert (forall ((|A_0| Int) (|B_0| Int) (|D_0| Int) (|E_0| Int) (|I_0| (Array Int Int)) (|G_0| Int) (|F_0| Int) (|C_0| Int) (|H_0| Int) (|J| (Array Int Int)) (|.loc.12| Bool) (|A| Int) (|.loc.23| Bool) (|.y.17| (Array Int Int)) (|.y.20| Int) (|.y.19| Int) (|.y.22| (Array Int Int)) (|.y.15| Int) (|.y.13| Int) (|.y.14| Int) (|.y.16| Int) (|.y.18| Int) (|.y.21| Int) (|.xiv.1| Int)) (=> (and (and (and (and (and (and (and (= G_0 F_0) (= D_0 0)) (= (select I_0 A) (select J A))) (not (<= (+ A_0 (+ (* (- 1) B_0) (* (- 1) E_0))) 0))) (= A_0 G_0)) (= E_0 H_0)) (= B_0 C_0)) (not .loc.12)) (state |A_0| |B_0| |D_0| |E_0| |I_0| |G_0| |F_0| |C_0| |H_0| |J| |.loc.12| |A|))))
(assert (forall ((|A_0| Int) (|B_0| Int) (|D_0| Int) (|E_0| Int) (|I_0| (Array Int Int)) (|G_0| Int) (|F_0| Int) (|C_0| Int) (|H_0| Int) (|J| (Array Int Int)) (|.loc.12| Bool) (|A| Int) (|.loc.23| Bool) (|.y.17| (Array Int Int)) (|.y.20| Int) (|.y.19| Int) (|.y.22| (Array Int Int)) (|.y.15| Int) (|.y.13| Int) (|.y.14| Int) (|.y.16| Int) (|.y.18| Int) (|.y.21| Int) (|.xiv.1| Int)) (=> (and (state |A_0| |B_0| |D_0| |E_0| |I_0| |G_0| |F_0| |C_0| |H_0| |J| |.loc.12| |A|) (let ((.def_51 (<= E_0 D_0))) (let ((.def_60 (<= H_0 (to_int (+ (* (/ 1 4) (to_real F_0)) (* (- (/ 1 4)) (to_real G_0))))))) (let ((.def_64 (not .def_51))) (let ((.def_65 (not .loc.23))) (let ((.def_67 (not .def_60))) (let ((.def_77 (= (store (store I_0 (+ A_0 (* 4 D_0)) (select I_0 (+ B_0 (* 4 D_0)))) (+ B_0 (* 4 D_0)) (select I_0 (+ A_0 (* 4 D_0)))) .y.17))) (let ((.def_83 (= (+ C_0 (* (- 1) .y.20)) (- 4)))) (let ((.def_88 (= (+ F_0 (* (- 1) .y.19)) (- 4)))) (let ((.def_90 (select J F_0))) (let ((.def_91 (select J C_0))) (let ((.def_93 (store J F_0 (+ .def_90 .def_91)))) (let ((.def_94 (select .def_93 C_0))) (let ((.def_100 (store .def_93 C_0 (+ .def_90 (+ .def_91 (* (- 1) .def_94)))))) (let ((.def_111 (= (store .def_100 F_0 (+ (* (- 1) .def_90) (+ (* (- 1) .def_91) (+ .def_94 (select .def_100 F_0))))) .y.22))) (let ((.def_116 (= (+ D_0 (* (- 1) .y.15)) (- 1)))) (let ((.def_119 (= A_0 .y.13))) (let ((.def_122 (= B_0 .y.14))) (let ((.def_125 (= E_0 .y.16))) (let ((.def_128 (= G_0 .y.18))) (let ((.def_131 (= H_0 .y.21))) (and (not .loc.12) (or (or (or (and (and (and (not (= I_0 J)) .def_51) .def_60) .loc.23) (and (and (and (and (and (and (and (and (and (and (and (and .def_64 .def_65) .def_67) .def_77) .def_83) .def_88) .def_111) .def_116) .def_119) .def_122) .def_125) .def_128) .def_131)) (and (= J .y.22) (and (= C_0 .y.20) (and (= F_0 .y.19) (and .def_131 (and .def_128 (and .def_125 (and .def_122 (and .def_119 (and .def_116 (and .def_77 (and .def_65 (and .def_60 .def_64))))))))))))) (and (= I_0 .y.17) (and (= D_0 .y.15) (and .def_131 (and .def_128 (and .def_125 (and .def_122 (and .def_119 (and .def_111 (and .def_88 (and .def_83 (and .def_67 (and .def_51 .def_65))))))))))))))))))))))))))))))))))) (state |.y.13| |.y.14| |.y.15| |.y.16| |.y.17| |.y.18| |.y.19| |.y.20| |.y.21| |.y.22| |.loc.23| |.xiv.1|))))
(assert (forall ((|A_0| Int) (|B_0| Int) (|D_0| Int) (|E_0| Int) (|I_0| (Array Int Int)) (|G_0| Int) (|F_0| Int) (|C_0| Int) (|H_0| Int) (|J| (Array Int Int)) (|.loc.12| Bool) (|A| Int) (|.loc.23| Bool) (|.y.17| (Array Int Int)) (|.y.20| Int) (|.y.19| Int) (|.y.22| (Array Int Int)) (|.y.15| Int) (|.y.13| Int) (|.y.14| Int) (|.y.16| Int) (|.y.18| Int) (|.y.21| Int) (|.xiv.1| Int)) (=> (state |A_0| |B_0| |D_0| |E_0| |I_0| |G_0| |F_0| |C_0| |H_0| |J| |.loc.12| |A|) (not .loc.12))))
(check-sat)
