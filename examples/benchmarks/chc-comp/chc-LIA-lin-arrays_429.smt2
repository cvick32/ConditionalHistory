(set-logic HORN)
(declare-fun state (Int (Array Int Int) (Array Int Int) (Array Int Int) Int (Array Int Int)) Bool)
(assert (forall ((|D| Int) (|J| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|B_0| Int) (|H| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (let ((.def_16 (select F B_0))) (let ((.def_17 (select F D))) (let ((.def_19 (select H B_0))) (let ((.def_20 (select H D))) (let ((.def_33 (select G D))) (let ((.def_34 (select G B_0))) (let ((.def_63 (select J B_0))) (let ((.def_66 (select J D))) (and (and (= .def_16 .def_17) (= .def_19 .def_20)) (or (and (= B_0 .def_19) (and (= B_0 .def_16) (and (not (<= B_0 0)) (and (or (<= .def_20 D) (not (<= .def_17 D))) (and (<= B_0 D) (and (and (and (= .def_33 .def_34) (not (= .def_33 1))) (= .def_34 1)) (not (<= 4 (+ D (* (- 1) B_0)))))))))) (and (not (= .def_19 1)) (and (= .def_20 1) (and (not (<= (+ D (* (- 1) B_0)) (- 4))) (and (<= D B_0) (and (or (not (<= .def_16 B_0)) (<= .def_63 B_0)) (and (= .def_63 .def_66) (and (not (<= D 0)) (and (= D .def_17) (and (= (select G .def_17) 10) (= D .def_66)))))))))))))))))))) (state |D| |J| |F| |G| |B_0| |H|))))
(assert (forall ((|D| Int) (|J| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|B_0| Int) (|H| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (and (state |D| |J| |F| |G| |B_0| |H|) false) (state |.xiv.1| |.xiv.2| |.xiv.3| |.xiv.4| |.xiv.5| |.xiv.6|))))
(assert (forall ((|D| Int) (|J| (Array Int Int)) (|F| (Array Int Int)) (|G| (Array Int Int)) (|B_0| Int) (|H| (Array Int Int)) (|.xiv.1| Int) (|.xiv.2| (Array Int Int)) (|.xiv.3| (Array Int Int)) (|.xiv.4| (Array Int Int)) (|.xiv.5| Int) (|.xiv.6| (Array Int Int))) (=> (state |D| |J| |F| |G| |B_0| |H|) false)))
(check-sat)
