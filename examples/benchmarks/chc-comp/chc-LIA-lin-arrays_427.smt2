(set-logic HORN)
(declare-fun state (Int Int Int Int Int Bool (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int)) Bool)
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.4| Int) (|.x.3| Int) (|C_1| Int) (|H_0| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (and (and (and (= A_1 (select D J_0)) (= B_1 (select C J_0))) (= G_1 0)) (not .loc.2)) (state |G_1| |I_0| |J_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|))))
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.4| Int) (|.x.3| Int) (|C_1| Int) (|H_0| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (and (state |G_1| |I_0| |J_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|) (let ((.def_30 (not .loc.2))) (let ((.def_36 (select E_1 J_0))) (let ((.def_38 (select F_1 J_0))) (let ((.def_48 (<= I_0 G_1))) (let ((.def_51 (not .def_48))) (let ((.def_57 (= (+ G_1 (* (- 1) H_0)) (- 1)))) (and (and (= J_0 .x.4) (and (= I_0 .x.3) (and (and (= B_1 .def_36) (= A_1 .def_38)) (= .def_38 C_1)))) (or (and (or (and .def_30 (and (= H_0 0) .def_48)) (and (and .loc.2 .def_51) .def_57)) (and (= .def_36 D_1) .loc.3)) (and (= D_1 (select (store E_1 G_1 (select F_1 G_1)) J_0)) (and (not .loc.3) (and .def_57 (and .def_30 .def_51))))))))))))) (state |H_0| |.x.3| |.x.4| |D_1| |C_1| |.loc.3| |.xtv.1| |.xtv.2| |.xiv.1| |.xiv.2| |.xpv.1| |.xpv.2|))))
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.4| Int) (|.x.3| Int) (|C_1| Int) (|H_0| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (state |G_1| |I_0| |J_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|) (let ((.def_76 (select C_3 G_1))) (let ((.def_77 (select D_3 G_1))) (not (and .loc.2 (and (and (and (and (not (<= I_0 G_1)) (not (= .def_76 .def_77))) (= B_1 .def_76)) (= A_1 .def_77)) (= G_1 J_0)))))))))
(check-sat)
