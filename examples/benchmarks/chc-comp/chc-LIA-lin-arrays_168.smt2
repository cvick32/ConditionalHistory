(set-logic HORN)
(declare-fun state ((Array Int Int) (Array Int Int) Int Int Int) Bool)
(assert (forall ((|A_0| (Array Int Int)) (|B_0| (Array Int Int)) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|J| Int) (|I| (Array Int Int)) (|.xpv.1| Int)) (=> (and (<= 1 D_0) (= C_0 0)) (state |A_0| |B_0| |C_0| |D_0| |E_0|))))
(assert (forall ((|A_0| (Array Int Int)) (|B_0| (Array Int Int)) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|J| Int) (|I| (Array Int Int)) (|.xpv.1| Int)) (=> (and (state |A_0| |B_0| |C_0| |D_0| |E_0|) (let ((.def_35 (* (- 1) C_0))) (and (= D_0 .x.2) (and (= A_0 .x.1) (and (and (= (+ C_0 (* (- 1) J)) (- 1)) (not (<= D_0 C_0))) (= (store (store (store (store (store B_0 (+ (+ .def_35 (* 5 D_0)) (- 1)) (select A_0 (+ (+ .def_35 (* 5 D_0)) (- 1)))) (+ (+ .def_35 (* 4 D_0)) (- 1)) (select A_0 (+ (+ .def_35 (* 4 D_0)) (- 1)))) (+ (+ .def_35 (* 3 D_0)) (- 1)) (select A_0 (+ (+ .def_35 (* 3 D_0)) (- 1)))) (+ (+ .def_35 (* 2 D_0)) (- 1)) (select A_0 (+ (+ .def_35 (* 2 D_0)) (- 1)))) C_0 (select A_0 C_0)) I)))))) (state |.x.1| |I| |J| |.x.2| |.xpv.1|))))
(assert (forall ((|A_0| (Array Int Int)) (|B_0| (Array Int Int)) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|.x.2| Int) (|.x.1| (Array Int Int)) (|J| Int) (|I| (Array Int Int)) (|.xpv.1| Int)) (=> (state |A_0| |B_0| |C_0| |D_0| |E_0|) (not (and (and (<= 0 E_0) (and (<= D_0 C_0) (not (= (select A_0 E_0) (select B_0 E_0))))) (not (<= (+ (* 5 D_0) (* (- 1) E_0)) 0)))))))
(check-sat)
