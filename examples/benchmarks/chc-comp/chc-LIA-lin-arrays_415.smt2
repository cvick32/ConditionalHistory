(set-logic HORN)
(declare-fun state (Int Int Int Int Int Int Bool (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int)) Bool)
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|K_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.6| Int) (|.x.5| Int) (|.x.4| Int) (|C_1| Int) (|H_1| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (and (and (and (= A_1 (select D K_0)) (= B_1 (select C J_0))) (= G_1 0)) (not .loc.2)) (state |G_1| |I_0| |J_0| |K_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|))))
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|K_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.6| Int) (|.x.5| Int) (|.x.4| Int) (|C_1| Int) (|H_1| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (and (state |G_1| |I_0| |J_0| |K_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|) (let ((.def_31 (not .loc.2))) (let ((.def_39 (select E_1 J_0))) (let ((.def_41 (select F_1 K_0))) (let ((.def_52 (<= I_0 G_1))) (let ((.def_55 (not .def_52))) (let ((.def_61 (= (+ G_1 (* (- 1) H_1)) (- 1)))) (and (and (= K_0 .x.6) (and (= J_0 .x.5) (and (= I_0 .x.4) (and (and (= B_1 .def_39) (= A_1 .def_41)) (= .def_41 C_1))))) (or (and (or (and .def_31 (and (= H_1 0) .def_52)) (and (and .loc.2 .def_55) .def_61)) (and (= .def_39 D_1) .loc.3)) (and (= D_1 (select (store E_1 G_1 (select F_1 G_1)) J_0)) (and (not .loc.3) (and .def_61 (and .def_31 .def_55))))))))))))) (state |H_1| |.x.4| |.x.5| |.x.6| |D_1| |C_1| |.loc.3| |.xtv.1| |.xtv.2| |.xiv.1| |.xiv.2| |.xpv.1| |.xpv.2|))))
(assert (forall ((|G_1| Int) (|I_0| Int) (|J_0| Int) (|K_0| Int) (|B_1| Int) (|A_1| Int) (|.loc.2| Bool) (|F_1| (Array Int Int)) (|E_1| (Array Int Int)) (|C| (Array Int Int)) (|D| (Array Int Int)) (|D_3| (Array Int Int)) (|C_3| (Array Int Int)) (|.x.6| Int) (|.x.5| Int) (|.x.4| Int) (|C_1| Int) (|H_1| Int) (|D_1| Int) (|.loc.3| Bool) (|.xtv.1| (Array Int Int)) (|.xtv.2| (Array Int Int)) (|.xiv.1| (Array Int Int)) (|.xiv.2| (Array Int Int)) (|.xpv.1| (Array Int Int)) (|.xpv.2| (Array Int Int))) (=> (state |G_1| |I_0| |J_0| |K_0| |B_1| |A_1| |.loc.2| |F_1| |E_1| |C| |D| |D_3| |C_3|) (let ((.def_80 (select C_3 G_1))) (let ((.def_81 (select D_3 G_1))) (not (and .loc.2 (and (and (and (and (and (not (<= I_0 G_1)) (not (= .def_80 .def_81))) (= B_1 .def_80)) (= A_1 .def_81)) (= G_1 J_0)) (= G_1 K_0)))))))))
(check-sat)
