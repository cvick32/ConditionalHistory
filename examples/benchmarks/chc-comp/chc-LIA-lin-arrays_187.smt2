(set-logic HORN)
(declare-fun state ((Array Int Int) Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((|A_0| (Array Int Int)) (|B_0| Int) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|N| Int) (|L| Int) (|J| Int) (|H| Int) (|F_0| Int) (|.x.3| Int) (|.x.2| Int) (|.x.1| Int) (|F| Int) (|M| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int) (|.xtv.4| Int) (|.xpv.1| Int)) (=> (and (and (and (= B_0 1) (not (<= C_0 0))) (= E_0 10)) (= D_0 0)) (state |A_0| |B_0| |C_0| |D_0| |E_0| |N| |L| |J| |H| |F_0|))))
(assert (forall ((|A_0| (Array Int Int)) (|B_0| Int) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|N| Int) (|L| Int) (|J| Int) (|H| Int) (|F_0| Int) (|.x.3| Int) (|.x.2| Int) (|.x.1| Int) (|F| Int) (|M| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int) (|.xtv.4| Int) (|.xpv.1| Int)) (=> (and (state |A_0| |B_0| |C_0| |D_0| |E_0| |N| |L| |J| |H| |F_0|) (let ((.def_44 (* 4 B_0))) (let ((.def_57 (ite (= D_0 H) (store A_0 (+ .def_44 (- 4)) E_0) (store A_0 (+ .def_44 (- 4)) H)))) (let ((.def_61 (ite (= D_0 J) (store .def_57 (+ .def_44 (- 3)) E_0) (store .def_57 (+ .def_44 (- 3)) J)))) (let ((.def_65 (ite (= D_0 L) (store .def_61 (+ .def_44 (- 2)) E_0) (store .def_61 (+ .def_44 (- 2)) L)))) (and (= E_0 .x.3) (and (= D_0 .x.2) (and (= C_0 .x.1) (and (= (+ B_0 (* (- 1) F)) (- 1)) (and (<= B_0 C_0) (= (ite (= D_0 N) (store .def_65 (+ .def_44 (- 1)) E_0) (store .def_65 (+ .def_44 (- 1)) N)) M))))))))))) (state |M| |F| |.x.1| |.x.2| |.x.3| |.xtv.1| |.xtv.2| |.xtv.3| |.xtv.4| |.xpv.1|))))
(assert (forall ((|A_0| (Array Int Int)) (|B_0| Int) (|C_0| Int) (|D_0| Int) (|E_0| Int) (|N| Int) (|L| Int) (|J| Int) (|H| Int) (|F_0| Int) (|.x.3| Int) (|.x.2| Int) (|.x.1| Int) (|F| Int) (|M| (Array Int Int)) (|.xtv.1| Int) (|.xtv.2| Int) (|.xtv.3| Int) (|.xtv.4| Int) (|.xpv.1| Int)) (=> (state |A_0| |B_0| |C_0| |D_0| |E_0| |N| |L| |J| |H| |F_0|) (not (and (and (<= 0 F_0) (and (not (<= B_0 C_0)) (= D_0 (select A_0 F_0)))) (not (<= (+ (* 4 C_0) (* (- 1) F_0)) 0)))))))
(check-sat)
